часы:

26.05 - 5 рэббит бонусы
27.05 - 9 рэббит бонусы
28.05 - 9 рэббит бонусы
29.05 - 9 рэббит бонусы
30.05 - 8 рэббит бонусы

-------------------------------------------------------------------

наброски команд:

sudo nano rabbitmq-consumer

при запуске слушателя через systemd, если я сделаю var_dump в коде, куда будет идти вывод?

journalctl -u rabbitmq-consumer.service -f

php yii rabbit/test-bonus

sudo systemctl restart rabbitmq-consumer.service

sudo systemctl stop rabbitmq-consumer.service

journalctl -u rabbitmq-consumer.service -f


/home/yuriy/projects/tyres/docker/rabbitMq/rabbitmq-consumer.service


/home/yuriy/projects/tyres/rabbit.sh

зачем так усложнять в этой строке
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
если можно просто ввести pwd?

-------------------------------------------------------------------
рэббит на тайресе для бонусов

- readme файл с интсрукцией и командами для работы с докер
- документация для 1с апи бонусов
- прокинуть новый параметр бонусы к шинам на тайресе

- бэк бонусов в каталоге
- фронт бонусов в каталоге

- бэк истории бонусов для лк
- фронт истории бонусов для лк

- добавить галку в корзину
- прокинуть новый параметр в апи заказа

***
поднять тестовый минио на компе
*** 
каталог тарйтайрес

-------------------------------------------------------------------
https://help.tyres.spb.ru/issues/80063

- история по бонусам
- очередь на актуальное кол-во бонусов
- бонусы в базе обмена
- запрос как промокод
- условия для брендов

ознакомиться с инфо к задаче
прикинуть структуру сообщений

оценить насколько сложно поднять рэббит со стороны тайрес

-------------------------------------------------------------------
вопрос - в какой момент будет происходить начисление бонусов - когда заказ оплачен

когда заказ оформлен? 
или когда заказ получен?

Необходимо будет набросать документацию по событиям.

1 очередь - начисление бонусов при событии (покупка, услуги и т.д.):

Предполагается 3 пути взаимодействия.
1 - пуш сообщений о событиях в рэббит.
2 - апи для получения полной истории бонусов по клиенту
3 - пуш кол-ва бонусов в exchange новым свойствам к гудам

1:

idUser - идентификатор юзера
idOperationType - тип операции (списание, начисление)
bonusCount - количество бонусов
idEventType - тип события (заказ, услуга)
idEvent - идентификатор события (заказа, услуги)
date - дата сделки

bonus_operation_type
id name

bonus_event_type
id name

bonus_event
id idUser idOperationType idEventType idEvent createdAt bonusCount

[{
  "body": {
    "id_user": b89ef299-041f-11ec-b3c0-ac1f6b4daebb,
    "id_operation_type": 2,
    "bonus_count": 300,
    "id_event_type": 3,
    "id_event", 47,
    "date": 456456234
  }
}]

набросок структуры сообщения в рэббит:

type - тип (заказ или услуга order, service)
idOperation - начисление или списывание
idEvent - id события (заказ, запись на мойку, запись на шиномонтаж)
bonusCount - кол-во бонусов начислено
idOrder - id заказа
idService - id услуги
date - дата события (timestamp или обычная дата)

[{
  "type": "order",
  "body": {
    "idUser": b89ef299-041f-11ec-b3c0-ac1f6b4daebb,
    "idEvent": 3,
    "bonusCount": 300,
    "idOperation": 1,
    "idOrder": 4,
    "idService", Null
    "date": 456456234
  }
}]

2:
Api запрос истории 

запрос:

[{
  "body": {
    "idUser": b89ef299-041f-11ec-b3c0-ac1f6b4daebb,
  }
}]

ответ:

[
  {
    "body": [
      {
        "idEvent": 3,
        "bonusCount": 300,
        "idOperation": 1,
        "idOrder": 4,
        "idService": null,
        "date": 456456234
      },
      {
        "idEvent": 2,
        "bonusCount": 300,
        "idOperation": 1,
        "idOrder": 6,
        "idService": null,
        "date": 456456245
      },
      {
        "idEvent": 3,
        "bonusCount": 300,
        "idOperation": 2,
        "idOrder": 7,
        "idService": null,
        "date": 456456278
      }
    ]
  }
]

3:
бонусы привязываем в exchange в каждогу гуду новым полем.
Мы забираем эти данные и отображаем на сайте.
