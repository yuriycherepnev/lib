; для звонков через сайт
[CallFiles]
exten => _X.,1,NoOp(Call To Web)
exten => _X.,n,Wait(1)
exten => _X.,n,Set(CALLERID(all)=3252121)
exten => _X.,n,Set(NOW=${EPOCH})
exten => _X.,n,Set(DAY=${STRFTIME(${NOW},,%d)})
exten => _X.,n,Set(MONTH=${STRFTIME(${NOW},,%m)})
exten => _X.,n,Set(YEAR=${STRFTIME(${NOW},,%Y)})
exten => _X.,n,Set(TIMESTR=${YEAR}${MONTH}${DAY}-${STRFTIME(${NOW},,%H%M%S)})
exten => _X.,n,Set(CALLFILENAME=fromweb-${EXTEN}-${TIMESTR}-${UNIQUEID})
exten => _X.,n,Set(CDR(recordingfile)=${CALLFILENAME}.wav)
exten => _X.,n,MixMonitor(/var/spool/asterisk/monitor/${YEAR}/${MONTH}/${DAY}/${CALLFILENAME}.wav)
exten => _X.,n,Dial(SIP/MegafonSIP/${EXTEN},300)
exten => _X.,n,Hangup()

; для приема входящих
[servicephone-incoming]
exten => _4XX,1,Log(NOTICE, Incoming call <${EXTEN}> to context [${CONTEXT}])
same => n,Dial(SIP/${EXTEN},,rtT)
same => n,Goto(s-${DIALSTATUS},1)

exten => s-NOANSWER,1,Playback(abonent)
same => n,Playback(ne-otvechaet)
same => n,Log(NOTICE, BLINDTRANSFER=${BLINDTRANSFER})
same => n,GotoIf($["${BLINDTRANSFER}" = ""]?:${CONTEXT},revert-blind,1)
same => n,Hangup()

exten => s-BUSY,1,Playback(abonent)
same => n,Playback(zanjat)
same => n,Log(NOTICE, BLINDTRANSFER=${BLINDTRANSFER})
same => n,GotoIf($["${BLINDTRANSFER}" = ""]?:${CONTEXT},revert-blind,1)
same => n,Hangup()

exten => s-CONGESTION,1,Playback(all-circuits-busy)
exten => s-CONGESTION,n,Hangup()

exten => s-CHANUNAVAIL,1,Playback(the-number-u-dialed)
same => n,Playback(is-curntly-unavail)
same => n,Log(NOTICE, BLINDTRANSFER=${BLINDTRANSFER})
same => n,GotoIf($["${BLINDTRANSFER}" = ""]?:${CONTEXT},revert-blind,1)
same => n,Hangup()

;Если был слепой перевод на занятый номер, пытаемся вернуть звонок обратно
;Вычисляем номер, с которого был трансфер
exten => revert-blind,1,Set(ExtLength=${LEN(${EXTEN})})
same => n,Log(NOTICE, Number blind - ${BLINDTRANSFER})
same => n,Set(OrigNumber=${BLINDTRANSFER:4:3})
same => n,Dial(SIP/3244544/${OrigNumber},45,tT)
;Если не получилось, значит еще не положили трубку. Ждем 3 секунды и пробуем еще раз.
same => n,Wait(3)
same => n,Dial(SIP/3244544/${OrigNumber},45,tT)
;Если не получилось, значит еще не положили трубку. Ждем 2 секунды и пробуем еще раз.
same => n,Wait(2)
same => n,Dial(SIP/3244544/${OrigNumber},45,tT)
same => n,Macro(hangup,${RequestId},${Secret})

exten => _s-.,1,Hangup

; Для звонков на Asterisk
[servicephone-outgoing]
exten => _4XX,1,Log(NOTICE, outgoing call <${EXTEN}> to context [${CONTEXT}])
same => n,Dial(SIP/3244544/${EXTEN},,rtT)
same => n,HangUp()

;[ext-local-custom]
;exten => _*XXX,1,NoOp(Login/logout dynamic queue member)
;same => n,Set(queuename=${EXTEN:1})
;same => n,NoOp(${CALLERID(num)} to ${queuename})

; Для подслушивания звонков
;[app-custom-chanspy]
;exten => 555.,1,Answer
;exten => 555.,n,Wait(1)
;exten => 555.,n,ChanSpy(SIP/${EXTEN:3},qw)
;exten => 555.,n,Hangup

[from-internal-additional-custom]
exten => 860,1,GotoIf($["${DB(CF/180)}" = "989111612121"]?cftrue:cffalse)
same => n(cffalse),Set(DB(OLD_CF/180)=${DB(CF/180)})
same => n,NoOp(OLD CF: ${DB(OLD_CF/180)})
same => n,Set(DB(CF/180)=989111612121)
same => n,Set(DB(CFB/180)=989111612121)
same => n,Set(DB(CFU/180)=989111612121)
same => n(cftrue),Hangup()

exten => 861,1,Set(DB(CF/180)=${DB(OLD_CF/180)})
same => n,Set(DB(CFB/180)=${DB(OLD_CF/180)})
same => n,Set(DB(CFU/180)=${DB(OLD_CF/180)})
same => n,Hangup()

exten => 865,1,GotoIf($["${DB(CF/200)}" = "989313118002"]?cftrue:cffalse)
same => n(cffalse),Set(DB(OLD_CF/200)=${DB(CF/200)})
same => n,NoOp(OLD CF: ${DB(OLD_CF/200)})
same => n,Set(DB(CF/200)=989313118002)
same => n,Set(DB(CFB/200)=989313118002)
same => n,Set(DB(CFU/200)=989313118002)
same => n(cftrue),Hangup()

exten => 866,1,Set(DB(CF/200)=${DB(OLD_CF/200)})
same => n,Set(DB(CFB/200)=${DB(OLD_CF/200)})
same => n,Set(DB(CFU/200)=${DB(OLD_CF/200)})
same => n,Hangup()


[outboundmsg1]
exten => s,1,Set(TIMEOUT(digit)=5)             ; Set Digit Timeout to 5 seconds
exten => s,2,Set(TIMEOUT(response)=10)         ; Set Response Timeout to 10 seconds
exten => s,3,Answer
exten => s,4,Wait(1)
exten => s,5,Background(outboundmsgs/msg1)         ; "play outbound msg"
exten => s,6,Background(outboundmsgs/how_to_ack)   ; "Press 1 to replay or 2 to acknowledge receiving this message"
exten => 1,1,Goto(s,5)   ; replay message
exten => 2,1,Goto(msgack,s,1) ; acknowledge message
exten => t,1,Playback(vm-goodbye)
exten => t,2,Hangup

[msgack]
exten => s,1,Playback(outboundmsgs/thankyou)
exten => s,2,Playback(vm-goodbye)
exten => s,3,Hangup


;[macro-hangupcall-custom]
;exten => s,1,DumpChan()
;exten => s,n,System(/etc/asterisk/scripts/zulip.sh 'stream' 'IT' 'Пропущенный звонок от ${CALLERID(all)}')
;exten => s,n,MacroExit()

[send-to-zulip]
exten => s,1,NoOp(Entering user defined context [send-to-zulip] in extensions_custom.conf)
exten => s,n,System(/etc/asterisk/scripts/zulip.sh 'stream' 'IT' 'Пропущенный звонок для ${EXTEN} ${DNID} от ${CALLERID(all)}')
exten => s,n,hangup()
