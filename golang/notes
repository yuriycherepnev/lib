* разрядные операции:

Поразрядные операции выполняются над отдельными разрядами чисел в бинарном представлении.
Например, число пять в двоичной системе имеет три разряда: 101, а число восемь - четыре разряда: 1000.

Операции сдвига

<< сдвиг влево (прибавление разряда)
>> сдвиг вправо (уменьшение разряда)

package main
import "fmt"
  
func main() {
    var a int = 2 
    fmt.Printf("a = %b\n", a)   // a = 10
    a = a << 2; // сдвиг влево на два разряда
    fmt.Printf("a = %b\n", a)   // a = 1000
}

Поразрядные операции:

&: поразрядная конъюнкция (операция И или поразрядное умножение). Возвращает 1, если оба из соответствующих разрядов обоих чисел равны 1. Возвращает 0, если разряд хотя бы одного числа равен 0

|: поразрядная дизъюнкция (операция ИЛИ или поразрядное сложение). Возвращает 1, если хотя бы один из соответствующих разрядов обоих чисел равен 1

^: поразрядное исключающее ИЛИ. Возвращает 1, если только один из соответствующих разрядов обоих чисел равен 1

&^: сброс бита (И НЕ). В выражении z = x &^ y каждый бит z равен 0, если соответствующий бит y равен 1. Если бит в y равен 0, то берется значение соответствующего бита из x.

package main
import "fmt"
 
func main() {
    var a int = 5 | 2;          // 101 | 010 = 111  - 7
    var b int = 6 & 2;          // 110 & 010 = 10  - 2
    var c int = 5 ^ 2;          // 101 ^ 010 = 111 - 7
    var d int = 5 &^ 6;         // 101 &^ 110 = 001 - 1
 
    fmt.Println("a:", a)
    fmt.Println("b:", b)
    fmt.Println("c:", c)
    fmt.Println("d:", d)
}

