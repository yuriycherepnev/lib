env tyres file:

defined('YII_DEBUG') or define('YII_DEBUG', true);
defined('YII_ENV') or define('YII_ENV', 'dev');
defined('NODE_PATH') or define('NODE_PATH', '/home/new-root/.nvm/versions/node/v17.9.1/bin/node');

---------------------------------------------------------- 
db tyres:

<?php
$host = '127.0.0.1';
$dbName = 'tyres';
$port = 3307;

return [
    'class' => 'common\models\Connection',
    'host' => $host,
    'dbName' => $dbName,
    'dsn' => "mysql:host={$host};dbname={$dbName}",
    'username' => 'root',
    'password' => 'root',
    'charset' => 'utf8',
];

---------------------------------------------------------- 

настройка файлов для запуска проекта на лок.сервере:

common/config/db.php

$host = 'localhost';
$dbName = 'tyres';

common/config/dbUrlNumber.php

$host = 'localhost';
$dbName = 'url';

common/config/env.php
defined('YII_DEBUG') or define('YII_DEBUG', true);
defined('YII_ENV') or define('YII_ENV', 'dev');

common/config/kibanaLogging.php
return 0;

common/config/main.php
if (YII_ENV_DEV) {
    $config['bootstrap'][] = 'debug';
    $config['modules']['debug'] = 'yii\debug\Module';

    $config['bootstrap'][] = 'gii';
    $config['modules']['gii'] = 'yii\gii\Module';

    $config['components']['assetManager']['forceCopy'] = true;
}
----------------------------------------------------------
включить debug и gii панель:

/frontend/web/index.php

, '/^debug/', '/^gii/'];

----------------------------------------------------------
работа mysql через консоль + (sql_mode)

mysql -u root -p  (подключение)
mysql> set global sql_mode='';  (установить глобальную переменную в консоли)

Или постоянно:

Файл конфигурации: /etc/mysql/my.cnf
[mysqld]  
sql_mode = NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES
default_authentication_plugin = mysql_native_password
(сбросить авторизацию до старой версии)

Глобальные переменные mysql:
SHOW VARIABLES\g

SELECT @@sql_mode;
SELECT @@global.sql_mode;
SELECT @@session.sql_mode;

----------------------------------------------------------
Загрузить базу данных:
mysql -u root -p (sudo mysql)
CREATE DATABASE new_database;
use new_database;
source ~/database/tyres.sql;
source ~/database/tyres6002.sql;

source ~/database/puls2022.sql;

source ~/database/asteris.sql;

source ~/database/exchange_b2b.sql;

mysql -u root -p root_pass db_name < db_name.sql
sudo mysql -u root2 -p b2b < ~/Загрузки/opttyres.sql

Закрыть оболочку MySQL:
CTRL+D

Перезагрузить Mysql:
sudo service mysql restart

mysql -u root -p
CREATE DATABASE tyres;
use tyres;
source ~/database/tyres4010.sql;
source ~/database/tyres2909.sql;

----------------------------------------------------------
Права доступа файла:
chmod 744 koshka.txt

Права доступа каталога:
chmod -R 775 sobaki

----------------------------------------------------------
SQl запрос может положить сервер.
Для перезапуска выполнить:

sudo service php5.6-fpm reload
sudo service php7.4-fpm reload
sudo /etc/init.d/php7.4-fpm restart
sudo systemctl restart mysql

----------------------------------------------------------

newfrontend/config/assetManager - сборка css 

newfrontend/config/urlManager.php - правила построения url

ctr shift f - поиск по всему проекту php storm
shift shift - 

----------------------------------------------------------
Где mysql ищет свои конфиги (консольная команда):


Нужен фрагмент вывода вроде такого:

Default options are read from the following files in the given order:
/etc/my.cnf /etc/mysql/my.cnf /usr/etc/my.cnf ~/.my.cnf

----------------------------------------------------------
Добавить алиасы git:

git config --global alias.co checkout
git config --global alias.ci commit
git config --global alias.st status
git config --global alias.br branch
git config --global alias.hist "log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short"
git config --global alias.type 'cat-file -t'
git config --global alias.dump 'cat-file -p'

----------------------------------------------------------
GIT
[alias]
  co = checkout
  ci = commit
  st = status
  br = branch
  hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
  type = cat-file -t
  dump = cat-file -p

----------------------------------------------------------
Добавить алиасы консоль временно:

alias name='command'
alias phpswap='sudo update-alternatives --config php'

Постоянные алиасы надо указывать в файле:

home/yuriy/.bashrc

пример:
alias phpswap='sudo update-alternatives --config php'
alias sshkey='cat ~/.ssh/id_ed25519.pub'

-----------------------------------------------------------
очистка кеша:

  php yii cache/flush-all

  sudo rm -rf common/runtime/cache/*

--------------------------------------------------------
phpmyadmin:

  http://localhost/phpmyadmin
  user: root
  password: root

--------------------------------------------------------------
Тесты:
https://git.tyres.spb.ru:3000/Exclusive/tyres.spb.ru/wiki/tests

прописать хосты для тестов в директории:
/etc/hosts

172.27.100.130 acceptance.tyres.spb.ru
172.27.100.130 acceptance.test3.tyres.spb.ru

Посмотреть результаты тестов на проде:

http://acceptance.tyres.spb.ru/test_output/report.html
http://acceptance.test3.tyres.spb.ru/test_output/report.html

--------------------------------------------------------------
Для тестов: 

java -Dwebdriver.chrome.driver=tests/chromedriver -jar tests/selenium-server.jar запускается как процесс прослушки

sudo vendor/bin/codecept run Запускается в новом окне или после скрытия первой команды в фон. 
После run можно указать путь до определенного теста

При наличии ошибки “Cannot call non W3C standard command while in W3C mode”: Добавить в acceptance.suite.yml в WebDriver следующие строки:

  capabilities:
    chromeOptions:
      w3c: false

--------------------------------------------------------------
Дополнительно, необходимо указать в файлах acceptance.suite.yml и api.suite.yml путь до своего локального сайта

tests/acceptance.suite.yml:

class_name: AcceptanceTester
modules:
  enabled:
  - WebDriver:
      url: http://tyres
      browser: chrome
      window_size: maximize
      wait: 1
      capabilities:
              chromeOptions:
                w3c: false
  - Yii2:
      configFile: 'common/config/test-local.php'
      part: init
      cleanup: false

------------------------------------------------------------------
tests/api.suite.yml:

actor: ApiTester
modules:
    enabled:
        - \Helper\Api
        - REST:
              url: http://tyres/api/
              depends: PhpBrowser
              part: Json

--------------------------------------------------------------
Тест кабинета: 

  sudo vendor/bin/codecept run - полное тестирование

  sudo vendor/bin/codecept run tests/acceptance/CabinetCest.php - тесты кабинета

  sudo vendor/bin/codecept run tests/api/CatalogCest.php - апи кабинета

  sudo vendor/bin/codecept run tests/acceptance/ManagerCest.php - менеджер тесты
  
  sudo vendor/bin/codecept run tests/acceptance/MakeOrderByDeliveryCest.php

Мобильные тесты:

  sudo vendor/bin/codecept run  --env mobile

------------------------------------------------------------------
Результаты тестов на проде:

http://acceptance.tyres.spb.ru/test_output/report.html

------------------------------------------------------------------
.gitignore: 

common/runtime
tests/api.suite.yml
tests/acceptance.suite.yml
common/config/dbUrlNumber.php
common/config/cart.php
common/config/kibanaLogging.php

------------------------------------------------------------------
Накатить миграции:

php yii migrate

Откатить миграции:

yii migrate/down  

Миграция в vendor пакет:

php yii migrate/create get_pickup_work_days --migrationPath=/home/new-root/projects/tyres/vendor/exclusive/yii2-get-pickup/src/migrations

------------------------------------------------------------------
Обновить composer: 

composer install

-----------------------------------------------------------------
Чтобы посмотреть подключенные файлы:

<?php

$files = get_included_files();

echo '<pre>';
foreach ($files as $file) {
    if(stristr($file, 'vendor') !== FALSE) {
        unset($file);
    } else if(stristr($file, 'common') !== FALSE) {
        unset($file);
    } else {
        var_dump($file);
    }
}
echo '</pre>';

?>

-----------------------------------------------------------------
Чтобы отключить кэширование в файлах прописываем:

common/config/main.php

if (YII_ENV_DEV) {
    $config['bootstrap'][] = 'debug';
    $config['modules']['debug'] = 'yii\debug\Module';

    $config['bootstrap'][] = 'gii';
    $config['modules']['gii'] = 'yii\gii\Module';

    $config['components']['assetManager']['forceCopy'] = true;
}

newfrontend/config/assets.php

    'assetManager' => [
        'appendTimestamp' => true,
        'basePath' => '@webroot/assets',
        'baseUrl' => '@web/assets',
    ],

-----------------------------------------------------------------
Для прав доступа rbac необходимо в файлах прописать соответствующие правила:

console/config/rbacControllers.php
[
        'roles' => [User::ROLE_ADMIN, User::ROLE_ADMIN_MANAGER],
        'module' => PermissionsHelper::ADMIN,
        'controller' => 'block'
    ],

Генерация файла rbac:

php yii rbac/init

common/components/rbac/items.php

'admin_block__controller' => [
        'type' => 2,
    ],

-----------------------------------------------------------------
Запуск геттера:
php yii getter/parse-one tyre

php yii getter/parse-one disk

php yii getter/parse-one accum

php yii orderApi/order-queue/make-order-from-queue

геттер контроллер:
console/controllers/GetterController.php

Provider:

php yii provider/update-car-brand

php yii provider/remains-mail

php yii provider/yarshintorg-prices 1

php yii provider/available-queue
-----------------------------------------------------------------

Чек прогресс геттера:

var_dump('parseOne');
$this->service->parseOne($type);
var_dump('validateGoods');
$this->service->validateGoods();
var_dump('matchingGoods');
$this->service->matchingGoods();
var_dump('saveGoods');
$this->service->saveGoods();


$start = microtime(true);
var_dump('parseOne');
$this->service->parseOne($type);
echo round((microtime(true) - $start)) . PHP_EOL;
var_dump('validateGoods');
$this->service->validateGoods();
echo round((microtime(true) - $start)) . PHP_EOL;
var_dump('matchingGoods');
$this->service->matchingGoods();
echo round((microtime(true) - $start)) . PHP_EOL;
var_dump('saveGoods');
$this->service->saveGoods();
echo round((microtime(true) - $start)) . PHP_EOL;
var_dump('generateReport');
$this->service->generateReport($type);
echo round((microtime(true) - $start)) . PHP_EOL;

-----------------------------------------------------------------
Запись в файл с геттера:

$fp = fopen('disks.txt', 'w');
fclose($fp);

$fp = fopen('disks.txt', 'a');
fwrite($fp, $validateGood["brand"] . ' / ' . $validateGood["model"] . PHP_EOL);
fclose($fp);


foreach ($goods as $good) {
    $data = [];
    foreach ($good as $key => $value) {
        $data[] = '[' . $key . ' => ' . $value . ']';
    }

    $fp = fopen('getter.txt', 'a');
    fwrite($fp, implode(PHP_EOL, $data) . PHP_EOL . PHP_EOL);
    fclose($fp);
}

Запись в файл с exchange:

$fp = fopen('brands.txt', 'w');
fclose($fp);

foreach ($this->brands as $brand) {
    $data = '[' . $brand[0] . ' => ' . $brand[1] . ']';
    $fp = fopen('brands.txt', 'a');
    fwrite($fp, $data . PHP_EOL);
    fclose($fp);
}

-------------------------------------------------------------------
Как сделать запрос в БД без редиректа:

die($this->view->returnDataJSON(
                $this->model->insertData($url_array[1], $url_array[2], $url_array[3], $url_array[4],
                    $url_array[5], $url_array[6], $url_array[7])
            ));

-------------------------------------------------------------------
Переустановить phpstorm:

sudo snap list

sudo snap remove phpstorm

sudo snap install phpstorm --classic

----------------------------------------------------------------
установка jetbrains из архива:

sudo tar xf ~/Downloads/jetbrains/PhpStorm-2024.2.2.tar.gz -C /opt/

cd /opt/

sudo mv PhpStorm-242.22855.79 phpstorm

ссылка на исполняемый файл:

sudo ln -s /opt/phpstorm/bin/phpstorm.sh /usr/local/bin/phpstorm

ярлык:
sudo nano /usr/share/applications/phpstorm.desktop

[Desktop Entry]
Version=1.0
Type=Application
Name=PhpStorm
Exec=/opt/phpstorm/bin/phpstorm.sh
Icon=/opt/phpstorm/bin/phpstorm.png
Terminal=false
StartupWMClass=jetbrains-phpstorm
Categories=Development;IDE;
Comment=PhpStorm IDE

выдать права на исполнение:
sudo chmod +x /usr/share/applications/phpstorm.desktop

-------------------------------------------------------------------

установка из архива jetBrains:

goland-2024.2.2.1.tar.gz

sudo tar xf ~/Downloads/goland-2024.2.2.1.tar.gz -C /opt/

sudo ln -s /opt/goland-2024.2.2.1.tar.gz/bin/phpstorm.sh /usr/local/bin/phpstorm


PhpStorm-2024.2.1.tar.gz

sudo tar xf ~/Downloads/PhpStorm-2024.2.1.tar.gz -C /opt/

sudo ln -s /opt/PhpStorm-2024.2.1.tar.gz/bin/phpstorm.sh /usr/local/bin/phpstorm

-------------------------------------------------------------------

взлом phpstorm:

настройки хостов:

127.0.0.1
9999

чистка:

sudo find / -type d -iname jetbrains 2>/dev/null

sudo rm -r /home/yuriy/.cache/JetBrains
sudo rm -r /home/yuriy/.local/share/JetBrains
sudo rm -r /home/yuriy/.config/JetBrains
sudo rm -r /home/yuriy/.java/.userPrefs/jetbrains
sudo > /home/yuriy/.java/.userPrefs/prefs.xml

-------------------------------------------------------------------

Заблокировать phpstorm в хостах:

sudo gedit /etc/hosts

0.0.0.0 account.jetbrains.com
0.0.0.0 www.jetbrains.com
0.0.0.0 jetbrains.com
0.0.0.0 www-weighted.jetbrains.com
0.0.0.0 entry.prod-eu.w3jbcom.aws.intellij.net
0.0.0.0 entry.prod.w3jbcom.aws.intellij.net

::1 account.jetbrains.com
::1 www.jetbrains.com
::1 jetbrains.com
::1 www-weighted.jetbrains.com
::1 entry.prod-eu.w3jbcom.aws.intellij.net
::1 entry.prod.w3jbcom.aws.intellij.net

-------------------------------------------------------------------
Хз зачем. Потом выясню.

sudo chmod -R 777 common/runtime/cache/

---------------------------------------------------------------------
Способы обратиться к обьекту, если его имя начинается с цифры:

$good->{1ctxt};
        $good['1ctxt'];

        $param = '1ctxt';
        $good->$param;

        $good->getAttribute('1ctxt');


$paramsForCompare = [];
        foreach (self::MASS as $mass) {
            $paramsForCompare[$mass] = $good->$mass ? $good->$mass : 0;
        }

----------------------------------------------------------------------
<?= аналог echo ;

----------------------------------------------------------------------
Добавить свой столбец в вывод sql:

SELECT T1.Pole1, ..., "Приход" AS Тип

----------------------------------------------------------------------
Join + Concat
        SELECT t1.name t1_name,
       t2.name t2_name
FROM table1 t1 LEFT JOIN
     table2 t2 ON CONCAT(t1.country,  '.', t1.id ) = t2.code

----------------------------------------------------------------------
Having работает с результатом выполненного запроса.     

------------------------------------------------------------------
В безымянную функцию (callback) параметр можно передать через конструкцию USE:
function () use ($var) { }

------------------------------------------------------------------
Найти html элемент в инструментах разработчика:

ctrl + shift + c

-------------------------------------------------------------------
about:config
Посмотреть IP компьютера

permissions.default.image

--------------------------------------------------------------------
Отключить сборку:

newfrontend/config/main.php
$assetManager = [];

--------------------------------------------------------------------
Генерация YML файла.
В консоли прописать:

php frontend/web/admin/index.php generateymlnew generate yamarket

Сгенерированный yml файл лежит по адресу:
frontend/web/ya_widgets_new/yamarket.xml

Таблица с товарами для яндекс маркета:
goods_for_yamarket

--------------------------------------------------------------------
Удалить ветку git локально и удаленно:

git branch -d <branch_name>

git branch -D <branch_name> - принудительное удаление без проверки слияния

git branch -D 32112_renew_mailing_list_styles

git push <remote_name> --delete <branch_name>

--------------------------------------------------------------------
Конфиг для расчета стоимости доставки:

common/config/deliveryApi.php

<?php

return [
    'dellin' => [
        'key' => '9242790C-C049-11E5-A0DE-00505683A6D3'
    ],
    'nrg' => [
        'key' => 'O1eUW6P72YlTL1q89c7EobDpgP9i6kdLDUazY8f1vLAQinczuLWijSnkKpdHtC0q'
    ],
    'vozovoz' => [
        'key' => 'vEV1DfXPEpKUt71BgZL0P1hVqYICpSsvmKbKFvKY'
    ],
    'gtd' => [
        'key' => '5m4p3Wr9wdzrzor49Eh_eJuhQhY_-jZb '
    ],
    'baikal' => [
        'key' => 'b9f9c2f50f4e1cf00e7e61d073f0f5dd'
    ]
];

--------------------------------------------------------------------
Время выполнения скрипта:

$start = microtime(true);
echo 'time: ' . (microtime(true) - $start) . ' sec.';

$start = microtime(true);
echo round((microtime(true) - $start)) . PHP_EOL;

--------------------------------------------------------------------
Отправить юзера на 404 страницу:

throw new NotFoundHttpException();

--------------------------------------------------------------------
upsert пример:

Yii::$app->db->createCommand()
    ->upsert('provider_file', [
        'catalog' => $catalog,
        'time' => date("Y-m-d H:i:s")
    ], [
        'time' => date("Y-m-d H:i:s"),
    ])
    ->execute();

--------------------------------------------------------------------
Как поднять проект:

* Сделать git clone с удаленного репозитория в директорию: git clone https://github.com/libgit2/libgit2

git clone https://git.tyres.spb.ru:3000/Exclusive/frontend.b2b.tyres.spb.ru

* Создать конфиг файл для проекта: 

sudo nano /etc/apache2/sites-available/phpmyadmin
/etc/apache2/sites-available 

* Включение виртуального хоста: 
sudo a2ensite exsdample.conf
sudo a2ensite 000-default.conf
sudo a2ensite 000-default.conf.save

* Перезапуск apache: systemctl reload apache2

* Прописать сайт в хостах: /etc/hosts

* Скачать базу данных и подключить ее в конфигах.

Подключить нужную версию php и php-fpm
Скачать все расширения для требуемой версии php.

Установить права доступа на runtime и assets

--------------------------------------------------------------------

Создать файл/директорию:

touch file.txt / mkdir dir1

Удалить файл/директорию:

rm myfile.txt

sudo rm -r
sudo rm -r dir1

Открыть файл:

nano nano_file.txt

gedit gnome.txt

Очистить папку:

rm -rf /tmp/folder/*

rm -rf /assets/*

sudo rm -r assets/*

sudo rm -r data/*

-------------------------------------------------------------------
css ширина по контенту:
width: fit-content;

--------------------------------------------
Получить айдишник последнего добавленного элемента в миграции
(добавление связанных данных):

$id = Yii::$app->db->getLastInsertID();

--------------------------------------------------------------------
shift + prtScreen - снимок выделенной области

--------------------------------------------------------------------
Переключить версию PHP:
sudo update-alternatives --config php

--------------------------------------------------------------------
Сборка гульпа:
gulp sassLayout

--------------------------------------------------------------------
Установить gulp:
npm install --save-dev gulp-sass
--------------------------------------------------------------------
Посмотреть ip адрес в консоли:
ifconfig

--------------------------------------------------------------------
Посмотреть индексы в таблице БД:
SHOW INDEX FROM module_catalog_info;
SHOW INDEX FROM module_catalog_disks;
SHOW INDEX FROM module_catalog_tires;

Использовать индекс:
SELECT FROM table USE INDEX (name);

Добавить/удалить индексы:

CREATE INDEX season
ON module_catalog_info (season);

ALTER TABLE module_catalog_tires
DROP INDEX turbo_boost;

CREATE INDEX brand
ON module_catalog_tires (season);

ALTER TABLE module_catalog_tires
DROP INDEX brand;

ALTER TABLE module_catalog_tires
DROP INDEX additional_param_index;

--------------------------------------------------------------------
Посмотреть Get параметры yii:

Yii::$app->request->get();
var_dump(Yii::$app->request->get());

var_dump(Yii::$app->request->post());
--------------------------------------------------------------------
DropDownList:

Форматируем класс ActiveRecord в массив.
Выводим выпадающий список.

$items = ArrayHelper::map($cat,'id','name');
echo Html::dropDownList('cat', 'null', $items);


echo Html::beginForm('index', 'post', ['method' => 'post', 'action' => 'user/create']);
echo Html::dropDownList('news', 'null', $items);
echo Html::submitButton('buttonName', [
    'name' => 'name',
    'value' => '777',
    'class' => 'submit',
    'data' =>
        ['method' => 'post']

]);
echo Html::endForm();
        
--------------------------------------------------------------------
Кнопки:

<?= Html::button('Нажми меня!', ['class' => 'teaser']) ?>
<?= Html::submitButton('Отправить', ['class' => 'submit']) ?>
<?= Html::resetButton('Сбросить', ['class' => 'reset']) ?>

--------------------------------------------------------------------
Создать миграцию:

yii migrate/create create_news_table

--------------------------------------------------------------------
Миграция на индексы:

/**
 * Class m210505_131214_add_index_22233_brand_and_brand_translit
 */
class m210505_131214_add_index_22233_brand_and_brand_translit extends Migration
{
    const INDEX_NAME = 'turbo_boost';
    const DOUBLE_INDEX_NAME = 'turbo_double_boost';
    const TABLE = 'module_catalog_disks';

    public function safeUp()
    {
        $this->createIndex(self::INDEX_NAME, self::TABLE, ['brand', 'sorted']);
        $this->createIndex(self::DOUBLE_INDEX_NAME, self::TABLE, ['model', 'brand', 'sorted', 'qnt']);
    }

    public function down()
    {
        $this->dropIndex(self::INDEX_NAME, self::TABLE);
        $this->dropIndex(self::DOUBLE_INDEX_NAME, self::TABLE);
    }
}

--------------------------------------------------------------------
Миграция на update:

<?php

use yii\db\Migration;

/**
 * Class m210507_113202_change_synonym_eco_contact_6
 */
class m210507_113202_change_synonym_eco_contact_6 extends Migration
{
    const TABLE = 'automatic_brands_models';
    /**
     * {@inheritdoc}
     */
    public function safeUp()
    {
        $this->update(self::TABLE, ['model' => 'ContiEcoContact 6'], ['model' => 'EcoContact 6']);
    }
    /**
     * {@inheritdoc}
     */
    public function safeDown()
    {
        $this->update(self::TABLE, ['model' => 'EcoContact 6'], ['model' => 'ContiEcoContact 6']);
    }
}

--------------------------------------------------------------------
Синонимы лежат в таблице:

automatic_brands_models

--------------------------------------------------------------------
Валидация ноvера jquery (функция mask):

$('#selector').on('keydown', function (e) { }).mask('+7 (999) 999-99-99', phoneMaskSettings);

--------------------------------------------------------------------
Ip Олега:
172.27.178.186
172.27.178.64
172.27.178.26
172.27.178.78

172.27.178.64/tyres2909.sql
172.27.178.64/severAutoTyre2010.xml

172.27.178.64/1c_exchange.week3.sql
172.27.178.78/1c_exchange.week3.sql
172.27.178.78/1c2202.sql
172.27.178.78/1c_exchange.sql

172.27.178.78/tyres1702.sql
--------------------------------------------------------------------
Быстро установить закладку: F11
Перейти к закладке: Shift+F11
Дать имя закладке: Ctrl+F11

--------------------------------------------------------------------
Найти модель по имени таблицы:

public static function tableName()
{
    return 'module_catalog_tires';
}

--------------------------------------------------------------------
RabbitMq.

Ссылка на статью:
http://mindhalls.ru/rabbitmq-install-and-sample/

Установка amqp:
sudo apt install php-amqp -y

1. Первый делом нужно установить RabbitMQ Server:
apt-get install rabbitmq-server
или:
dpkg -i rabbitmq-server_3.6.9-1_all.deb
После этого можно подключать библиотеку Rabbitа уже непосредственно в проект.

2. Подключить RabbitMQ в проект с помощью Composer.
Создаем в папке с проектом файл composer.json и пишем туда такое содержимое:

{
    "require" : {
        "php-amqplib/php-amqplib" : ">=2.6.1"
    }
}

3. Далее открываем папку с проектом и терминале и запускаем установку зависимостей:
composer install
После этого в корне проекта появится папка vendor с установленной в ней библиотекой RabbitMQ.

Возможные проблемы! Иногда композер не может найти некоторые библиотеки в системе, например:
php-bcmath и php-mbstring, установить их легко:
apt-get install php-bcmath
apt-get install php-mbstring

4. Следующим шагом будет подключить файл autoloader.php в файлы исходного кода в своем проекте с помощью require_once, например, если файл script.php лежит в корне проекта, то строчка будет выглядеть вот так

require_once __DIR__ . '/vendor/autoload.php';

С этого момента можно пользоваться библиотечными функциями.

--------------------------------------------------------------------
Установить пакеты для PHP (нужную версию прописать):

sudo apt install php5.4 php5.4-common php5.4-cli php5.4-fpm php5.4-gd php5.4-mysql php5.4-mbstring php5.4-curl php5.4-xml php5.4-zip php5.4-json php5.4-imagick php5.4-xmlrpc php5.4-bz2 php5.4-dev php5.4-opcache


sudo apt-get install php5.6 php5.6-common php5.6-cli php5.6-fpm php5.6-gd php5.6-mysql php5.6-mbstring php5.6-curl php5.6-xml php5.6-zip php5.6-json php5.6-imagick php5.6-xmlrpc php5.6-bz2 php5.6-dev php5.6-opcache

sudo apt-get install php5.6-mysql

sudo apt-get install libapache2-mod-php7.4 php7.4 php7.4-common php7.4-cli php7.4-fpm php7.4-gd php7.4-mysql php7.4-curl php7.4-intl php7.4-xsl php7.4-mbstring php7.4-zip php7.4-json php7.4-imagick php7.4-xmlrpc php7.4-bz2 php7.4-dev php7.4-opcache php7.4-ssh2 php7.4-bcmath php7.4-soap


sudo apt-get install php8.0 php8.0-common php8.0-cli php8.0-fpm php8.0-gd php8.0-mysql php8.0-mbstring php8.0-curl php8.0-xml php8.0-zip php8.0-json php8.0-imagick php8.0-xmlrpc php8.0-bz2 php8.0-dev php8.0-opcache

sudo apt-get install libapache2-mod-php8.0 php8.0-common php8.0-gd php8.0-mysql php8.0-curl php8.0-intl php8.0-xsl php8.0-mbstring php8.0-zip php8.0-bcmath php8.0-soap  php8.0-imagick

sudo apt-get install php8.0 php8.0-common php8.0-cli php8.0-fpm php8.0-gd php8.0-mysql php8.0-mbstring php8.0-curl php8.0-xml php8.0-zip php8.0-json php8.0-imagick php8.0-xmlrpc php8.0-bz2 php8.0-dev php8.0-opcache libapache2-mod-php8.0 php8.0-intl php8.0-xsl php8.0-bcmath php8.0-soap


--------------------------------------------------------------------
Переключить версию composer:
composer self-update --1 
composer self-update --2

php /usr/local/bin/composer self-update --1

--------------------------------------------------------------------
При несовместимости плагинов и версии composer:

composer install --ignore-platform-reqs
composer update --ignore-platform-reqs

И update каждого плагина по отдельности:
composer update yiisoft/yii2-composer

composer update exclusive/yii2-url-manager

composer update exclusive/yii2-order-api

composer update php:7.4.*@dev

composer update yiisoft/yii2:~2.0.42

composer require php:7.4.*@dev

composer require happyworm/jPlayer

composer require marcelog/pami:2.*

composer require exclusive/yii2-call:2.2.22

Удалить пакет:

composer remove php-ffmpeg/php-ffmpeg

composer remove happyworm/jPlayer

composer remove exclusive/yii2-call

composer update yiisoft/yii2

composer update exclusive/yii2-get-pickup

--------------------------------------------------------------------
Посмотреть письма в mailer.
Добавить папку mail в runtime.
Прописать в mailer.php:

<?php return [
    'class' => 'yii\swiftmailer\Mailer',
    'viewPath' => '@mail',
    'useFileTransport' => true,
    'fileTransportPath' => 'runtime/mail',
    'transport' => [
        'class' => 'Swift_SmtpTransport',
        'host' => '',
        'port' => ''
    ]
];

--------------------------------------------------------------------
Эмулятор айфона:
https://appetize.io/demo?device=iphone6splus&scale=75&orientation=portrait&osVersion=13.7

--------------------------------------------------------------------
Указание обьекта в константе класса:

use common\models\cars\Cars;

class Model extends Model
{
    const MODULE_OBJECTS = [
        Cars::class
    ];
}

--------------------------------------------------------------------
Консольные команды для запуска модулей в frontend:

php frontend/web/index.php postman parseSelectionCar

php frontend/web/index.php postman parseMtmXml

php frontend/web/index.php postman updateCarDb

php frontend/web/index.php getter compare

php frontend/web/index.php xlsgen generate

php frontend/web/index.php xlsgen generateVianor

php frontend/web/index.php xlsgen generateExelpda

php frontend/web/index.php xlsgen generateExelForEuroTransOneDay

php frontend/web/index.php xlsgen generateExelForEuroTransZeroDay

php frontend/web/admin/index.php generateymlnew generate yamarket

php yii asta/urls

php yii asta/goods

php yii asta/compare-goods

php yii asta/generate-files

php yii asta/brands

php yii getter/parse-one

php yii catalog/counting-goods

php yii sitemap/vasya-zapili-mne-sitemap-da

--------------------------------------------------------------------
Проверка модуля postman:

В frontend/web/modules/postman/PostmanModel.php / в public function getMtmXml() прописать:

$xml = __DIR__ . '/min_auto.xml';
return ['path' => $xml];

$xml = __DIR__ . '/auto.xml';
return ['path' => $xml];

Остальное закоментировать.

--------------------------------------------------------------------
Экранирование символов в консольной команде:

php frontend/web/admin/index.php generateymlnew generate e-katalog\ \(nadavi.net\)

--------------------------------------------------------------------
Main контроллер:

newfrontend/controllers/MainController.php
48 строка - actionIndex

--------------------------------------------------------------------
Обновить yii2:

composer require "yiisoft/yii2:~2.0.42" --update-with-dependencies

composer require "yiisoft/yii2:~2.0.5" --update-with-dependencies

Обновить php:

composer require php:7.0.* --update-with-dependencies

composer require php:>=7.4.0 --update-with-dependencies

--------------------------------------------------------------------

Вам нужно вызвать $this->redirect() после parent::init() , 
так как $response свойство (используемое $this->redirect()) инициализируется там.

--------------------------------------------------------------------

Обработчик на динамически созданный элемент:

$(document).ready(function () {
    $(document).on('click','.className',function (e) {

    });
});
--------------------------------------------------------------------

Найти файл в linux:

find filename

--------------------------------------------------------------------

ext-intl - расширение интернационализации (Intl) - это оболочка для библиотеки ICU, 
набора библиотек C / C ++ и Java, которые обеспечивают поддержку Unicode и 
глобализации для программных приложений. Это позволяет программистам 
PHP выполнять в своих сценариях согласованную сортировку 
UCA и форматирование даты / времени / числа / валюты.

https://docs.moodle.org/311/en/admin/environment/php_extension/intl

--------------------------------------------------------------------

Чтобы добавить partition к таблице, первичный ключ должен 
включать поля по которым идет разделение на сегменты.
--------------------------------------------------------------------

Удалить пакет composer:

composer remove "codeception/codeception"

composer remove "codeception/base"

--------------------------------------------------------------------
Получить/посмотреть запрос SQL:

$object->createCommand()->getRawSql()

--------------------------------------------------------------------
Пути для img:

/home/new-root/projects/tyres/frontend/web/admin/modules/cat/upload_img/aeolus_precisionace_ah01.jpg

/home/new-root/projects/tyres/frontend/web/modules/catalog/img/goods/big/achilles_atr_sport.jpg

--------------------------------------------------------------------
Kibana:

kibana.tyres.spb.ru
Name: kibana
Password: LPW4jB8EfW

--------------------------------------------------------------------
echo '<pre>';
var_dump();
echo '</pre>';
die;

--------------------------------------------------------------------
Запустить службу Apache:
sudo systemctl start apache2

Остановить службу Apache:
sudo systemctl stop apache2

Перезапустить службу Apache:
sudo systemctl restart apache2

Статус:
sudo systemctl status apache2

Отключить apache по умолчанию:
sudo systemctl disable apache2

Включить apache по умолчанию:
sudo systemctl enable apache2

--------------------------------------------------------------------
Nginx:
sudo ufw enable

Статус:
sudo ufw status

Статус:
systemctl status nginx

Остановить:
sudo systemctl stop nginx

Запуск:
sudo systemctl start nginx

Перезапуск:
sudo systemctl restart nginx

Перезагрузка:
sudo systemctl reload nginx

Отключить автоматичсекий запуск:
sudo systemctl disable nginx

Включить автозапуск:
sudo systemctl enable nginx

Все запущенные процессы nginx:
ps -ax | grep nginx

Создание нового сайта:

sudo nano /etc/nginx/sites-available/your_domain
sudo ln -s /etc/nginx/sites-available/your_domain /etc/nginx/sites-enabled/

папка где лежат проекты должна иметь нужные права:

sudo chmod +x /home/yuriy

Флаг +x означает добавление права на выполнение (execute) для указанной директории. 
Применительно к директории это означает разрешение на её просмотр и доступ внутрь.

--------------------------------------------------------------------
clickhouse:

systemctl stop clickhouse-server

sudo systemctl disable clickhouse-server

--------------------------------------------------------------------
windows:

https://wmcentre.net/search?searchstr=windows+10+pro

--------------------------------------------------------------------
Ошибка phpMyAdmin:

$cfg['blowfish_secret'] = '12345678901234567890123456789012';

--------------------------------------------------------------------
1c_exchange

php5.6 yii exchange 4 dbB2bTyres

php yii exchange 4 dbB2bTyres

php yii exchange 2 dbTrucktyres

php yii exchange 1 dbTyres

php yii import-config/set-stores-names

php yii import-config/insert-dst-group

--------------------------------------------------------------------
.htaccess

RewriteEngine on
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{REQUEST_FILENAME} !-f
RewriteRule . index.php [L]


RewriteEngine on
# If a directory or a file exists, use it directly
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
# Otherwise forward it to index.php
RewriteRule . index.php

--------------------------------------------------------------------
.gitignore

.idea
vendor
runtime

--------------------------------------------------------------------
Примеры сайтов:

https://spb.allrad.ru/

--------------------------------------------------------------------

Хостинг:

https://pq.hosting/

--------------------------------------------------------------------
Символьные ссылки:

создание:
ln -s ../api/web api

ln -s ../../api/web/ api

просмотр:
ls -li

--------------------------------------------------------------------
Переопределить дефолтные REST функции:
https://stackoverflow.com/questions/27648504/yii2-override-generic-create-action-in-rest-activecontroller/50744982#50744982

В контроллере переопределите actions метод следующим образом:

public function actions()
{
    $actions = parent::actions();
    unset($actions['create']);
    return $actions;
}

А затем вы можете определить свой метод создания в этом контроллере.

public function actionCreate()
{
    // your code goes here
}

--------------------------------------------------------------------
Генерация url карточки товара:

$goodFactory = new GoodFactory();
//tires
$goodObject = $goodFactory->createGoodObject('disks');
$good = $goodObject::findOne('37zWHS219518');
var_dump($good->getCardUrl());
die;

Генерация uniqueId:

$goodFactory = new GoodFactory();
$goodObject = $goodFactory->createGoodObject('disks');
$good = $goodObject::findOne('20863132210996');
$generateId = $this->generateUnique($good, 'disks');
var_dump($generateId);
die;

--------------------------------------------------------------------
Запросы на b2b:

b2b/api/notification/get

b2b/api/notification/set

b2b/api/notification/delete

b2b/api/notification-template/get

b2b/api/notification-template/set

b2b/api/notification-template/delete

--------------------------------------------------------------------
Значение по умолчанию в миграции yii2:

public function safeUp()
{
  'id' => $this->primaryKey(),
  'text' => $this->string()->notNull()->defaultValue(false),
}

Текущее время по умолчанию:


'createdAt' => $this->timestamp()->defaultValue(new \yii\db\Expression('NOW()'))
'createdAt' => $this->timestamp()->defaultExpression('CURRENT_TIMESTAMP')

'createdAt' => $this->timestamp()->defaultExpression('CURRENT_TIMESTAMP')

SELECT unix_timestamp(now())

--------------------------------------------------------------------
Запущенные службы:

sudo service --status--all

--------------------------------------------------------------------
Чек ошибок php:

error_reporting(E_ALL);
ini_set("display_errors", 1);

--------------------------------------------------------------------
Запись данных в csv:

создание:
$data = ['unique_id', 'id', 'custom'];
$file = fopen('model.csv', 'w');
fputcsv($file, $data);
fclose($file);

Запись:

$file = fopen('model.csv', 'a');
$modelArray = Model::find()
  ->select(['*'])
  ->asArray()
  ->all();

foreach ($modelArray as $model) {
  fputcsv($file, $model);
}

fclose($file);

die;

--------------------------------------------------------------------
Вставка данных из CSV в бд:

$handle = fopen('/home/new-root/projects/b2b/model.csv','r');
$count = 0;
while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {
  $model = new Model();
  $model->id = $data[0];
  if ($data[1]) {
    $model->id1c = $data[1];
  }
  $model->idBrand = $data[2];
  $model->name = $data[3];
  if(!$model->save()) {
    var_dump($count++);
    var_dump($data);
  }
}
die;

--------------------------------------------------------------------
Сценарии:

const SCENARIO_ADD = 'add';
const SCENARIO_EDIT = 'edit';

public function scenarios(): array
{
  $scenarios = parent::scenarios();
  $scenarios[self::SCENARIO_ADD] = ['idBrand', 'text'];
  $scenarios[self::SCENARIO_EDIT] = ['id', 'text'];
  return $scenarios;
}

Добавление условий параметров для сценариев:

[['id'], 'required', 'on' => [self::SCENARIO_DELETE]],
[['idBrand'], 'unique', 'on' => [self::SCENARIO_ADD]],

--------------------------------------------------------------------
Регулярные выражения:

Поиск слова:
$regExp = "/\btext\b/i";

\ba - начало слова
a\b конец слова
i - без учета регистра

Поиск '/data/' в get запросе:

preg_match('/\b\/data\/\b/i',  "$path");

Все цифры между слешом и тире:
(?<=\/)\d+(?=-)

Вся строка между двумя тегами:

/(?<=<tbody>).*(?=<\/tbody>)/

/(?<=<div>).*(?=<\/div>)/

$value = preg_split("/\B\s*\b/", $value);
$value = preg_split("/\s+\b/", $channel);
$value = preg_split("/\s+/", $buf)

Проверка:
https://regex101.com/r/PxbTYd/1

Сайт регулярки:
http://www.nncron.ru/help/RU/add_info/regexp.htm

\A - начало всего текста (а не только строки)

Оставить только буквы в строке:

preg_replace("/[^a-zA-ZА-Яа-я]/", '', 'Bf Goodrich 45')

--------------------------------------------------------------------

UrlRules для UrlManager restFull api:

[
  'class' => 'yii\rest\UrlRule',
  'controller' => 'api/notification',
  'extraPatterns' => [
    'GET ' => '',
    'POST ' => '',
  ],
    'pluralize' => false,
],

--------------------------------------------------------------------
Парсинг файла continental:

/console/models/getter/importCatalog/catalogs/continentalTyreCatalog.php

private function initFilePath()
{
  $user = $this->pathFile['user'];
  $pass = $this->pathFile['pass'];
  $host = $this->pathFile['host'];
  $restName = $this->pathFile['rest_name'];

//$connection = ftp_connect($host);
//ftp_login($connection, $user, $pass);
//$files = ftp_nlist($connection, ".");
//unset($files[array_search($restName, $files)]);
//sort($files);
//$catalogFileName = end($files);

  $this->fileRest = 'ftp://' . $user . ':' . $pass . '@' . $host . '/' . $restName;
  $this->filePath = 'ftp://change:Zg5NIuv86Q@172.27.178.44/Conti_PRICAT_RU_PL_Exclusive_20220711.csv';
}

--------------------------------------------------------------------
accesses:

tyres:
bakashoff@gmail.com
GfhjkmRjnjhsqYtEuflfnm

ilyabanokin@yandex.ru
5гаауыва

ooleg.chern@gmail.com
pass12341234

b2b:
bakashoff@gmail.com
Keykeykey0

b2b test:
ooleg.chern@gmail.com
123123

4kolesa:
bakashoff@gmail.com
UtybfkmysqGfhjkmLkz4Rjktc

pulsprice:
admin@pulsprice.ru
pulsik09a

--------------------------------------------------------------------
bakashoff

Пароль:
1q2w3e4r

$2a$07$usesomesillystringforevS24D46kl/f51ZYNNhRsAHEC1JzgwCS

Пароль для trucktyres:
admin
1q2w3e4r

md5:
5416d7cd6ef195a0f7622a9c56b55e84

--------------------------------------------------------------------
Посмотреть часы задачи:

https://help.tyres.spb.ru/time_entries?utf8=%E2%9C%93&f%5B%5D=spent_on&op%5Bspent_on%5D=w&f%5B%5D=user_id&op%5Buser_id%5D=%3D&v%5Buser_id%5D%5B%5D=395&f%5B%5D=&c%5B%5D=project&c%5B%5D=spent_on&c%5B%5D=user&c%5B%5D=activity&c%5B%5D=issue&c%5B%5D=comments&c%5B%5D=hours

--------------------------------------------------------------------
Ограничение размеров загружаемых файлов:
phpinfo();

Поле (путь к файлу php.ini):
Loaded Configuration File /etc/php/7.4/fpm/php.ini

В файле php.ini ищем настройки (выставляем нужные значения):

post_max_size равный или больше предполагаемому размеру post
upload_max_filesize — для загрузки файлов побольше. обычно равный post
max_execution_time и max_input_time побольше, чтобы скрипт не отвалился на долгой загрузке

--------------------------------------------------------------------
csrf token:

ключ токена в массиве куки или сессии:
(main.php или web.php)

Yii::$app->request->csrfParam

'request' => [
  'csrfParam' => '_csrf-newfrontend',
  'parsers' => [
    'application/json' => 'yii\web\JsonParser',
    ]
  ],

Включена ли валидация csrf на сайте:
\Yii::$app->request->enableCsrfValidation

получить значение:
(здесь лежит захешированный токен)
Yii::$app->request->getCsrfToken(); 
Yii::$app->request->csrfToken;

токен без хеша:
\Yii::$app->request->getCookies()['_csrf-newfrontend']->value

Валидация: 
Yii::$app->request->validateCsrfToken();

Куки:
\Yii::$app->request->getCookies();

Если значение true, хранится в куки:
Yii::$app->request->enableCsrfCookie;

Метод validateCsrfToken проверяет наличие токена в теле запроса или в заголовках:
Yii::$app->request->getBodyParam($Yii::$app->request->csrfParam)
Yii::$app->request->getCsrfTokenFromHeader()

--------------------------------------------------------------------
Сортировка вложенного массива:

        $out= [
            [
                [ 'name'=>'Апельсины','count'=>7 ],
                [ 'name'=>'Апельсины','count'=>13 ]
            ],
            [
                [ 'name'=>'Апельсины','count'=>7 ],
                [ 'name'=>'Апельсины','count'=>14 ]
            ],
            [
                [ 'name'=>'Апельсины','count'=>7 ],
                [ 'name'=>'Апельсины','count'=>12 ]
            ],
            [
                [ 'name'=>'Мандарины','count'=> 9 ],
                [ 'name'=>'Огурцы','count'=> 11 ]
            ]
        ];

        $tmp= [];

        foreach($out as $item){
            $count = array_column($item, 'count');
            $max = max($count);
            $tmp['count'][]=$max;
        }

        array_multisort($tmp['count'],SORT_ASC, $out);

        echo '<pre>';
        var_dump($out);
        echo '</pre>';
        die;

--------------------------------------------------------------------
 Сортировка одного массива по значениям другого:

$order = [15,16,9 ];
$sort = array_flip($order);
usort($data, function($a,$b) use($sort){
                return $sort[$a['num_block']] - $sort[$b['num_block']];
            });
            
--------------------------------------------------------------------
Наибольшее значение вложенного массива:

$maxRest = max(array_column($cartRests, "qnt"));

--------------------------------------------------------------------
Посмотреть ошибки записи и валидации:

$goodObj->load($arr, '');
$goodObj->save();
$goodObj->getErrors();

--------------------------------------------------------------------
Поднять проект react:

npm start

1. Установка node.js:
sudo apt update
sudo apt install nodejs

Посмотреть доступные версии:
nvm list-remote

2. Проверка:
nodejs -v
node -v

Выбрать нужную версию nodejs:
nvm list
nvm use v16.3.0

3. Диспетчер пакетов:
sudo apt install npm

4. Git clone проекта

5. В репозитории проекта:
npm install
npm i -g json-server

npm start
npm run dev
http://localhost:3000

--------------------------------------------------------------------
Отключить валидацию b2b:

/home/new-root/projects/b2b/modules/api/controllers/BaseController.php

//        $behaviors['authenticator']['except'] = ['options'];
//        $behaviors['authenticator'] = [
//            'class' => \sizeg\jwt\JwtHttpBearerAuth::class,
//            'except' => array_merge(self::PUBLIC_ACTIONS, ['options'])
//        ];

--------------------------------------------------------------------
Тесты b2b:

npm run test:e2e

--------------------------------------------------------------------
Запуск билда:

npm run build

--------------------------------------------------------------------

Регулярка на год:

<?php

$values = [
    'July 1967 USA',
    '14 March 1979 France',
    '23 June 1976 France',
    'from the 21 October 2016',  
];
foreach ($values as $value) {
    $pattern = '/(^|\s)(\d{4})(\s|$)/m';
    preg_match($pattern, $value, $match);
    echo $match[2] . "\n";
}
Output:

1967
1979
1976
2016

--------------------------------------------------------------------
Регулярка на цвет:

$regExp = 'F\-\s\sSilver';
$text = 'f-  silver';
preg_match('/\b' . $regExp . '\b/i', $text, $matches);
var_dump($matches);

                ->andWhere(['>', Disk::tableName() . '.qnt', 0])
                ->andWhere([Disk::tableName() . '.sorted' => 1])

--------------------------------------------------------------------
Регулярка несколько брендов без учета регистра:

preg_match("/konig|advanti|mamba/i", $brand);

--------------------------------------------------------------------
Регулярка на цифры и буквы:

preg_match("/^[a-zа-яё\d]{1}[a-zа-яё\d\s]*[a-zа-яё\d]{1}$/i", $text);

^ - начало строки
[a-zа-яё\d]{1} - строка может начинаться с букв латинского или русского языка (a-zа-яё) или цифры (\d). Один из этих символов должен обязательно встречаться {1} раз. Группа символов заключается в [ и ].
[a-zа-яё\d\s]* - то же самое, что в предыдущем случае, но добавляем еще любой пробельный символ (пробел, перевод строки, табуляция). Один их этих символов может встречаться произвольное число раз, 0 или больше, это и означает знак *.
[a-zа-яё\d]{1} - какой символ должен находиться непосредственно перед концом строки.
$ - собственно, конец строки.
Все это заключено в специальные ограничители (разделители). Ими может быть любой символ. Лучше использовать именно слеш. /здесь регулярное выражение/
i - означает, что регулярное выражение нечувствительно к регистру. Указывается сразу после ограничителя и называется флагом.

--------------------------------------------------------------------
Nginx:

server {
    index index.php;
    server_name hello.dev;
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
        set $base_root /home/constantin/projects/b2bNew;
        root $base_root/web;

    location ~ .php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+.php)(/.+)$;
        fastcgi_index index.php;
        fastcgi_pass unix:/run/php/php7.4-fpm.sock; #подключаем сокет php-fpm
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
   location ~ /.ht {
        deny all;
    }
    location ~ /.well-known {
            allow all;
    }
location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
}

fastcgi_pass php:9000;

--------------------------------------------------------------------
Форматирование даты react:

const timestamp = Date.now(); // This would be the timestamp you want to format
console.log(new Intl.DateTimeFormat('en-US', 
{year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}
).format(timestamp));

--------------------------------------------------------------------
Пуш без пароля (ssh):

Чтобы не вводить постоянно пароль, клонирование проекта надо выполнять по ssh протоколу.
Например:
git clone ssh://gituser@git.tyres.spb.ru/Exclusive/back.b2b.tyres.spb.ru.git
git clone ssh://gituser@git.tyres.spb.ru/Exclusive/tyres_satellites.git
git clone ssh://gituser@git.tyres.spb.ru/Exclusive/1c_exchange.git
git clone ssh://gituser@git.tyres.spb.ru/Exclusive/new.revosp.com.git

git clone https://github.com/FreePBX/core.git

В репозитории:
git remote -v 
git add origin <url>
git remote set-url origin <new-url>

Статья на stackOverflow:
https://ru.stackoverflow.com/questions/420040/%D0%9E%D0%B1%D0%BD%D0%BE%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D1%80%D0%B5%D0%BF%D0%BE%D0%B7%D0%B8%D1%82%D0%BE%D1%80%D0%B8%D1%8F-git-%D0%B1%D0%B5%D0%B7-%D0%B2%D0%B2%D0%BE%D0%B4%D0%B0-%D0%BF%D0%B0%D1%80%D0%BE%D0%BB%D0%B5%D0%B9

--------------------------------------------------------------------
Добавить папку в реквест и игнорировать содержимое.
.gitignore:

*
!.gitignore

--------------------------------------------------------------------
Пароль Wi-Fi:

cagTUTs6bx

--------------------------------------------------------------------
connectionRabbit mq:

return [
    [
        'host' => '127.0.0.1',
        'port' => '5673',
        'user' => 'admin',
        'password' => 'admin',
        'vhost' => '/',
    ]
];

--------------------------------------------------------------------
Поднять докер:

sudo docker-compose up

--------------------------------------------------------------------
phpMyAdmin отключить пароль:

gedit /etc/phpmyadmin/config.inc.php

раскоментировать:

$cfg['Servers'][$i]['AllowNoPassword'] = TRUE;

--------------------------------------------------------------------
Проверка на существование процесса:

    /**
     * @return bool
     */
    private function processExistence()
    {
        exec('ps aux', $top);

        $argv =& $_SERVER['argv'];
        unset($argv[0]);
        $regex = '';
        foreach ($argv as $k => $v) {
            $v = trim($v, '/');
            $v = str_replace('/', '\/', $v);
            $regex .= $v . '\s';
        }

        $regex = '/' . trim($regex, '\s') . '/';
        $status = 0;
        foreach ($top as $v) {
            if (preg_match($regex, $v)) {
                if (!preg_match('/.*\ssudo\s.*/', $v) && !preg_match('/.*\/bin\/sh\s\-c.*/', $v)) {
                    $status++;
                }
            }
        }
        return ($status == 4);
    }

--------------------------------------------------------------------
Отключить авторизацию phpMyAdmin:

$cfg['Servers'][$i]['auth_type'] = 'config';
/* Server parameters */
$cfg['Servers'][$i]['user'] = 'root';
$cfg['Servers'][$i]['password'] = '%mysqlrootpass%'

--------------------------------------------------------------------
Получение имени процесса по PID:

exec('ps -p ' . getmypid() . ' -o command=', $output);

Вывод определнных колонок:
ps -eo pid,ppid,user,cmd

--------------------------------------------------------------------
CRON:

Добавить команду:
crontab -e

Настрйоки cron:
crontab -l

Удалить все задачи:
crontab -r

Крон команда на каждую минуту:
* * * * * php /home/new-root/projects/1c_exchange/yii exchange

--------------------------------------------------------------------
Найти коммит/реквест по хешу:

PhpStorm аннотации -> showDiff -> копируем хеш справа вверху, вставляем в урл

https://git.tyres.spb.ru:3000/Exclusive/tyres.spb.ru/commit/b17d31bd651c1bf331f2cb4239fa058629318e52

https://git.tyres.spb.ru:3000/Exclusive/tyres.spb.ru/commit/0b37ed75a4f279d84bde25782c45a9ca415ed22b

https://git.tyres.spb.ru:3000/Exclusive/tyres.spb.ru/commit/0f087af174bb8c60f5e1fb349e807637be1612cc

https://git.tyres.spb.ru:3000/Exclusive/tyres.spb.ru/commit/b17d31bd651c1bf331f2cb4239fa058629318e52

https://git.tyres.spb.ru:3000/Exclusive/tyres.spb.ru/commit/5d8de7a42396182a5c1df8b01fd03c4bfd1697d2

7787692957c779ca794c5708ee9962674aa475d2

97f09605c75eef857c4ef20c8d0e862dd48d1319

Затем:

pull/4456/head

pull/4009/head

https://git.tyres.spb.ru:3000/Exclusive/tyres.spb.ru/pulls/4456/files

https://git.tyres.spb.ru:3000/Exclusive/tyres.spb.ru/pulls/4469/files
--------------------------------------------------------------------
Очистка input перед вставкой:

.on('paste', function (e) {
    e.target.value = '';
})

--------------------------------------------------------------------
phpstorm ключ:

https://plati.ru/itm/jetbrains-all-products-pack-license-key/3282645

https://ggsel.com/catalog/product/3296716

https://www.avito.ru/moskva/bilety_i_puteshestviya/jetbrains_1_god_2376672021

--------------------------------------------------------------------
Убить процесс:

Находим PID по порту:

sudo apt install lsof
sudo lsof -i :80

sudo apt install psmisc
sudo fuser 22/tcp

Вывод всех прцоессов:
ps axu

Поиск по имени:
ps axu | grep processName

Убить процесс:

kill 25609
kill -9 25609

Список всех сигналов к процессу:
kill -l

Убить все процессы с одним именем:
killall gcalctool

--------------------------------------------------------------------

Найти запущенный на порту сокет
lsof -ti tcp:8001

--------------------------------------------------------------------
Реверт:

git log --pretty=format:"%h %s" --graph

git revert -m1 578e08748

git revert -m1 c8e3483f5

--------------------------------------------------------------------
Wifi exclusive private:
cagTUTs6bx

--------------------------------------------------------------------
Перезапуск bluetooth:

sudo service bluetooth restart

sudo /etc/init.d/bluetooth restart 

--------------------------------------------------------------------
Проверка на корректный путь:

/**
* @param string $name
* @return array|yii\console\Response|yii\web\Response
*/
public function actionDownloadFile(string $name)
{
    $truePath = preg_match('/\b\/data\/\b/i',realpath(Yii::getAlias('@data') . "/files/$name"));
    $files = glob(realpath(Yii::getAlias('@data') . "/files/$name"));
    if ($truePath && count($files)) {
        return Yii::$app->response->sendFile($files[0], "$name");
    } else {
        return Yii::$app->responseHandler->response(Yii::$app->responseHandler::STATUS_400);
    }
}

--------------------------------------------------------------------
Пароль на файл nginx:

1. Сначала нужно установить утилитки, которые помогут сгенерить .htpasswd

sudo apt install apache2-utils

2. Теперь можно уже создать нужный файл

sudo htpasswd -c /путь_до_проекта/.htpasswd admin

Флажок -c указываем, когда только создаем .htpasswd, /etc/nginx/conf.d/.htpasswd - путь к файлику, а admin - нужный логин.

3. Далее в конфиге nginx прописываем правило для пути к файлу.
И ставим это правило в самом начале:

location ~ /img_catalog/img_catalog_list.xml {
    auth_basic "Enter password!";
    auth_basic_user_file $base_root/.htpasswd;
}

Доступ к файлу по урлу:

http://admin:pass_007@tyres/img_catalog/img_catalog_list.xml

Статья:
https://webdevkin.ru/posts/raznoe/basic-auth

--------------------------------------------------------------------
Запуск тестов b2b:

npm run test:e2e

--------------------------------------------------------------------
Поиск в вложенном массиве:

$goods = Yii::$app->db->createCommand('SELECT * FROM goods')->queryAll();

$orderGoods = Yii::$app->db->createCommand('SELECT * FROM order_goods')->queryAll();

foreach ($orderGoods as $orderGood) {
    $index = array_search($orderGood['id1c'], array_column($goods, 'id1c'));
    if ($index) {
        var_dump($orderGood['id1c'] . ' ' . $goods[$index]['id']);
    } else {
        var_dump('false');
    }
}

--------------------------------------------------------------------
Поиск файла ubuntu:

sudo find / -name "file.txt"

sudo find / -name "vsftpd.conf"

В текущей директории:

sudo find . -name "vsftpd.conf"

В текущей директории через grep:

ls | grep Documents

ls | grep 'My Documents'

Поиск слов в файле:

grep 'Class 1' Students.txt

или:

cat dump.sql | grep nokian

--------------------------------------------------------------------
Доступ по ftp:

sudo apt-get install vsftpd

В файле:
 /etc/vsftpd.conf

Раскомментировать строку:
write_enable=YES

sudo service vsftpd restart

Код:

$username = 'user';
$password = 'pass';

$conn_id = ftp_connect('81.23.96.254', '2121');

ftp_login($conn_id, $username, $password);

if (ftp_get($conn_id, 'RIMS.xml', __DIR__ . '/aloha.xml', FTP_ASCII)) {
    echo "Успешно загружен на сервер" . PHP_EOL;
} else {
    echo "Не удалось загрузить на сервер" . PHP_EOL;
}
ftp_close($conn_id);

--------------------------------------------------------------------
trycatch обработка ошибок:

Поскольку класс Error не наследуется от класса Exception, 
блок catch (Exception $e) { ... } для обработки неперехваченных 
исключений PHP 5 не может перехватить исключения Error. 
Для их перехвата используйте блок catch (Error $e) { ... } 
или установите обработчик исключений с помощью set_exception_handler().

try{  
}
catch (Exception $e){ 
}

try { 
}
catch (Error $e) {
}

Блок finally выполняется всегда:

try {
   print "это наш блок попыток n";
   throw new Exception();
} catch (Exception $e) {
   print "что-то пошло не так, есть улов!";
} finally {
   print "эта часть всегда выполняется";
}

Способ отловить и исключения и ошибки:

try {
} catch (Throwable $e) {
  var_dump($e);
}

Кастомный обработчик:

class MyCustomException extends Exception { }

function throwMyCustomException() {
      throw new MyCustomException('Здесь что-то не так.');
}

try {
   throwMyCustomException();
} catch (MyCustomException $e) {
   echo "Ваше пользовательское исключение поймано";
   echo $e->getMessage();
} catch (Exception $e) {
   echo "Стандартное исключение PHP";
}

--------------------------------------------------------------------
Автодополнение phpstorm: (шаблоны, функции, )

file -> settings -> editor -> live Templates -> php

https://russianblogs.com/article/46831062073/

--------------------------------------------------------------------
public static function getDb()
{
    return \Yii::$app->dbAsterisk;
}

Возвращает соединение с базой данных, используемое этим классом AR.

По умолчанию компонент приложения "db" используется в качестве соединения с базой данных. Вы можете переопределить этот метод, если хотите использовать другое соединение с базой данных.

--------------------------------------------------------------------
Тестирование СУБД:

MuSql:
systemctl status mysql.service

MariDb:
sudo systemctl status mariadb

Запуск:
sudo systemctl start mysql

--------------------------------------------------------------------
Убить процесс sql:

show processlist;
kill query 12345;

--------------------------------------------------------------------
Отменить изменения файла в реквесте:

git checkout last_common_commit -- path/to/file
git add path/to/file
git commit
git push origin HEAD

Где last_common_commit - это коммит от которого сделан бранч.

--------------------------------------------------------------------
Добавить папку vendor в git:

File -> Settings -> Version Control -> Directory Mapping

--------------------------------------------------------------------
gulp node-sass может сломаться.
Возможное решение:

npm install -g gulp-cli

npm rebuild node-sass --force

--------------------------------------------------------------------
Валидация пароля сервисы:

services/models/User.php

public function validatePassword($password)
{
    $password = md5(md5($password) . "&*6u&*Jio7j89H^78mhilfdgJKGHJH");
    $result = $this->pass === $password;
    return true;
}

--------------------------------------------------------------------
Range picker:

https://demos.krajee.com/date-range

--------------------------------------------------------------------
Редирект с параметрами:

if (isset($params['brand']) && $params['brand'] == 'nokian') {
    $params['brand'] = 'nokian tyres';
    return Yii::$app->response->redirect(Url::to(['/tyres/view'] + $params));
}

--------------------------------------------------------------------
Скачать файл с сервера:

scp -r root@172.27.100.240:/var/www/html /home/new-root/projects

scp root@172.27.100.240:/var/spool/asterisk/monitor/2022/09/13/in-3279474-9119001990-20220913-155327-1663073607.3127000.WAV /home/new-root/projects

Через php:

$connection = ssh2_connect('172.27.100.240');
ssh2_auth_password($connection, 'root', '8iNsHmpeS1');
$serverFile = '/var/spool/asterisk/monitor/2022/08/3038009.WAV';
$localFile = Yii::getAlias('@frontendWeb') . '/sample.wav';
$record = ssh2_scp_recv($connection, $serverFile, $localFile);

--------------------------------------------------------------------
Временный файл:

$tmpFile = tmpfile();
$metadata = stream_get_meta_data($tmpFile);
var_dump($metadata['uri']);

/home/new-root/projects/tyres/frontend/web/sample2.wav


Запись в временный файл:

$localFile = Yii::getAlias('@frontendWeb') . '/sample2.wav';
$tmpFile = tmpfile();
$metadata = stream_get_meta_data($tmpFile);
file_put_contents($metadata['uri'], file_get_contents($localFile));
--------------------------------------------------------------------
Bash скрипты:

#!/bin/bash
lame sample2.wav sample2.mp3

#!/bin/bash
lame tmpAudio/sample2.wav tmpAudio/sample2.mp3

Вызов из php:
shell_exec('bash audioConvert.sh');

--------------------------------------------------------------------
Удаленное подключение к mysql:

mysql -h 172.27.178.186 -u root -p

--------------------------------------------------------------------
Parse xls:

$file = __DIR__ . '/skad.xlsx';
$array = \moonland\phpexcel\Excel::import($file);

foreach ($array as $valuesKey => $values) {
    foreach ($values as $key => $value) {
        $array[$valuesKey][$key] = preg_replace("/[^0-9]/", '', $value);
    }
}

$data = ['article', 'retail', 'wholesale'];
$file = fopen('moscow_prices.csv', 'w');
fputcsv($file, $data);

foreach ($array as $value) {
    if ($value[1] && $value[2] && $value[4]) {
        $data = [$value[1], $value[2], $value[4]];
        fputcsv($file, $data);
    }
}
fclose($file);

--------------------------------------------------------------------
Список процессов:
sudo netstat -tunlp

Убить процесс:
kill -9 2199

--------------------------------------------------------------------
Ошибка mysql и ее решения:

This installation of MySQL is already upgraded to 5.7.15, 
use --force if you still need to run mysql_upgrade

https://askubuntu.com/questions/825579/upgrading-to-mysql-5-7-15-crashes-on-ubuntu-16-04

https://techierg.blogspot.com/2019/06/ubuntu-1804-mysql-this-installation-of.html

https://bugs.launchpad.net/ubuntu/+source/mysql-5.7/+bug/1817374/comments/8

--------------------------------------------------------------------
Открыть порты ubuntu:

sudo ufw allow from 172.27.100.240 to any port 5070 proto udp

sudo ufw allow to any port 5070 proto udp

Посмотреть правило на портах:

sudo ufw status

--------------------------------------------------------------------
Tyres prod:

Login: bakashoff
password: GfhjkmRjnjhsqYtEuflfnm


Кодировка csv для excell:

foreach ($firstString as $key => $salePoint) {
    $firstString[$key] = iconv("utf-8", "windows-1251", $salePoint)
}
$file = fopen($fileName, 'w');
fputcsv($file, $firstString, ";");
fclose($file);


timestamp to date:

date('d-m-Y H:i:s', $) 

--------------------------------------------------------------------
Внутренний указатель:

end($list);
reset($list);
$list[key($list)];
current($list);

--------------------------------------------------------------------
Поменять настройки php-ini:

1. Путь до файла - phpinfo()
2. Поменять настройки в самом файле.
3. Перезапустить fpm: /etc/init.d/php7.4-fpm restart

--------------------------------------------------------------------
Отключение кеширования js:

$this->publishOptions['forceCopy'] = true;

    public $publishOptions = [
        'forceCopy' => true
    ];

--------------------------------------------------------------------
Полезные программы:

Обязательно:
discord
telegram

Опционально:
fileZilla - загрузка файлов
dbeaver - просмотр бд
insomnia - запросы
twinkle интернет телефония
phpMyAdmin -> workbench
aspia удаленный доступ
rabbitMq

--------------------------------------------------------------------
curl json:

$data = ["order_id_full" => $id];
$jsonData = json_encode($data, JSON_UNESCAPED_UNICODE);

$config = \Yii::$app->params['orderStatusConfig']['getOrderStatus'];
$ch = curl_init($config['url']);

curl_setopt_array($ch, [
    CURLOPT_CUSTOMREQUEST => 'GET',
    CURLOPT_POSTFIELDS => $jsonData,
    CURLOPT_HTTPHEADER => [
        "Content-Type: application/json",
        "Authorization: Basic " . base64_encode($config['login'].':'.$config['pass']),
        'Content-Length: ' . strlen($jsonData),
    ],
    CURLOPT_RETURNTRANSFER => 1,
]);

        return json_decode(curl_exec($ch), true);


--------------------------------------------------------------------

Задачи 1с:

https://help.tyres.spb.ru/issues?author_id=me&set_filter=1&sort=updated_on%3Adesc&status_id=o


--------------------------------------------------------------------

kill telegram:

pgrep -l -u new-root
kill -9 4421

--------------------------------------------------------------------
array_reduce:

$companiesCount[$companyId] = array_reduce($goods,
    function($sum, $item) use ($customIds) {
         return $sum + ((in_array($item['custom'], (array)$customIds) && $item['sorted'] == 1 && $item['qnt'] > 0) ? 1 : 0);
}, 0);


--------------------------------------------------------------------
адаптив breakpoints:

breakpoint-xs: 0;
breakpoint-sm: 576px;
breakpoint-md: 768px;
breakpoint-lg: 992px;
breakpoint-xl: 1200px;

@media (min-width: 992px) and (max-width: 1199px) {
    .sale-point-wrapper {
        grid-template-columns: 1fr 1fr;
    }
}

@media (max-width: 767px) {
    .sale-point-wrapper {
        grid-template-columns: 1fr 1fr;
    }
}

@media (max-width: 576px) {
    .sale-point-wrapper {
        grid-template-columns: 1fr;
    }
}

--------------------------------------------------------------------
Grid скрыть невлезающие блоки:

@media (min-width: 767px) and (max-width: 992px) {
    .search-panel-goods {
        grid-template-columns: 1fr 1fr;
        grid-template-rows: 1fr;
        grid-auto-rows: 0;
        overflow-y: hidden;
    }
}

@media (min-width: 576px) and (max-width: 767px) {
    .search-panel-goods {
        grid-template-columns: 1fr;
        grid-template-rows: 1fr;
        grid-auto-rows: 0;
        overflow-y: hidden;
        grid-gap: 0;
    }
}

--------------------------------------------------------------------
Grid:

.sale-point-wrapper {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    border: 1px solid #dee2e6;
    grid-gap: 1px;
    background-color: #dee2e6;
}

.sale-point {
    background-color: white;
    cursor: pointer;
}

--------------------------------------------------------------------
Grid CSS Pinterest Layout:

//родитель
.widgets-wrapper {
    column-count: 2;
}

//дочерний элемент
.widget {
    display: grid;
    grid-template-rows: 1fr;
    page-break-inside: avoid;
    break-inside: avoid;
}

Размеры дочернего блока:

grid-column-start: 2;
grid-column-end: 6;

--------------------------------------------------------------------
Подсчет элементов массива:

$customCount = array_count_values(array_column($goods, 'brand'));

--------------------------------------------------------------------
Уникальные значения массива:

array_unique(array_column($arr, 'email'))

--------------------------------------------------------------------
VPN exclusive:

Cherepnev
oKvSitG7

pre-shared key:
nRe5KJllcv0

--------------------------------------------------------------------
Конфиг бд для работы с docker контейнером:

<?php

return [
    'class' => 'yii\db\Connection',
    'dsn' => 'mysql:host=127.0.0.1;port=3307;dbname=b2b',
    'username' => 'root',
    'password' => 'root',
    'charset' => 'utf8',

    // Schema cache options (for production environment)
    //'enableSchemaCache' => true,
    //'schemaCacheDuration' => 60,
    //'schemaCache' => 'cache',
];

--------------------------------------------------------------------

Проверка поиска pulsprice:

$body = ['type' => 'tyre', 'params' => ['1c_txt' => ['R19 225/35 88Y XL']], 'idSatellite' => 3];
$search = new SearchByText(json_decode(json_encode($body)));
var_dump($search->getGoods());
die;

--------------------------------------------------------------------
Высота блоков с img 16:9 по отношению к ширине:

<div class="calc-news-wrapper">
        <div class="card calc-news-item">
            <a href="<?= Url::to('') ?>">
                <?= Html::img('') ?>
            </a>
        </div>
</div>

.calc-news-wrapper {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 1fr;
    grid-gap: 2px;
}

.calc-news .calc-news-wrapper .calc-news-item {
    position: relative;
    padding-top: 56%;
}

.calc-news .calc-news-wrapper .calc-news-item:before {
    display: block;
    content: "";
    width: 100%;
}

.calc-news .calc-news-wrapper .calc-news-item a {
    display: flex;
    align-items: center;
    overflow: hidden;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
}

.calc-news .calc-news-wrapper .calc-news-item img {
    object-fit: cover;
    height: 100%;
    width: 100%;
}

@media (max-width: 1199px) {
    .calc-news-wrapper {
        grid-template-columns: 1fr 1fr;
    }
}

--------------------------------------------------------------------
exchange ветки:

new_master:
tyres
4kolesa

master:
b2b
satellites

--------------------------------------------------------------------

Удалить строку между символами:

$text = '123123 [[OE asdasdzxczxc asdasd qweqwe /OE]] sw s 123123';

$text = preg_replace("/\[\[OE(.*)\/OE\]\]/s", '', $text);

Удалить текст между тегами:

$str = '<a href="link.html">text</a>';

        $str = preg_replace('#(<a.*?>).*?(</a>)#', '$1$2', $str);

--------------------------------------------------------------------

Добавить сайт nginx:

sudo nano /etc/nginx/sites-available/your_domain

server {
        listen 80;
        listen [::]:80;

        root /var/www/your_domain/html;
        index index.html index.htm index.nginx-debian.html;

        server_name your_domain www.your_domain;

        location / {
                try_files $uri $uri/ =404;
        }
}

sudo ln -s /etc/nginx/sites-available/your_domain /etc/nginx/sites-enabled/

--------------------------------------------------------------------

env.php:

<?php
defined('YII_DEBUG') or define('YII_DEBUG', true);
defined('YII_ENV') or define('YII_ENV', 'dev');
defined('NODE_PATH') or define('NODE_PATH', '/home/yuriy/.nvm/versions/node/v12.18.2/bin/node');

--------------------------------------------------------------------
Jenkins:

https://jenkins.tyres.spb.ru/

yuriycherepnev
RfrjqGfhjkmE>hs

--------------------------------------------------------------------
Xdebug disable - в php.ini прописать:

xdebug.remote_autostart=0  
xdebug.remote_enable=0
xdebug.profiler_enable=0

Консольная команда:
sudo phpdismod xdebug

sudo phpenmod xdebug

затем рестартнуть fpm

--------------------------------------------------------------------
Date:

date('d.m.Y H:i', $timestamp)

----------------------------------------------------------------
Удалить папку из коммита:

git reset dir

----------------------------------------------------------------
Анаграмма:

$string1 = 'qwerty';
$string2 = 'ytrewq';
$array1 = str_split($string1);
$array2 = str_split($string2);
if (count($array1) == count($array2) && count(array_intersect($array1, $array2)) == count($array1)) {
    var_dump('анаграмма');
} else {
    var_dump('нет');
}

----------------------------------------------------------------
Отследить ajax валидацию yii2:

$('form').on('afterValidateAttribute', function(event, attr, msg) {
        console.log(event);
        console.log(attr);
        console.log(msg);
    });

----------------------------------------------------------------
Скачать файл curl:

curl -O 172.27.178.36/tyres1103.sql

----------------------------------------------------------------

select db:

const DB_TYRES_BATCH = 'tyres_batch';
const DB_TYRES = 'tyres';

private static $db = self::DB_TYRES;

public static function setDb($db)
{
    self::$db = $db;
}

public static function getDb()
{
    switch (self::$db) {
        case self::DB_TYRES:
            return Yii::$app->db;
        case self::DB_TYRES_BATCH:
            return Yii::$app->dbTrucktyres;
        default:
            throw new \Exception("Database is not selected");
    }
}

----------------------------------------------------------------
Json encode в Utf 8 / pretty print:

$decode = json_decode($json, true);
json_encode($text, JSON_UNESCAPED_UNICODE);
json_encode($text, JSON_UNESCAPED_UNICODE|JSON_UNESCAPED_SLASHES);
json_encode($decode, JSON_PRETTY_PRINT|JSON_UNESCAPED_UNICODE);

Выводе json:

$message = json_encode($decode, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE);

----------------------------------------------------------------
nginx config:

sudo nano /etc/nginx/sites-available/your_domain

sudo ln -s /etc/nginx/sites-available/your_domain /etc/nginx/sites-enabled/

----------------------------------------------------------------
Комментарий foreach

data = [];
foreach ($tyres as $tyre) {
    /* @var $tyre Tyre */
    $data[] = $tyre->getFullName();
}

----------------------------------------------------------------
Manticore index rebuild:

php yii manticore/drop-index
php yii manticore/create-index
php yii manticore/fill-index

----------------------------------------------------------------
git log
git log --pretty=format:"%h %s" --graph

----------------------------------------------------------------
Интернет:

sudo systemctl restart NetworkManager

nmcli connection show --active

nmcli connection down <имя_вашего_подключения>

----------------------------------------------------------------
constraint_name

<?php return [
    'class' => 'yii\db\Connection',
    'dsn' => 'mysql:host=127.0.0.1:3307;dbname=pulsprice',
    'username' => 'root',
    'password' => 'root',
    'charset' => 'utf8',
    'attributes' => [PDO::ATTR_CASE => PDO::CASE_LOWER],
]; 

----------------------------------------------------------------
git ключи:

генерация ключа 

ssh-keygen -t ed25519 -C "yuriy.cherepnev@gmail.com"

запустите ssh-agent в фоновом режиме

eval "$(ssh-agent -s)"

добавьте свой закрытый ключ SSH в ssh-agent

ssh-add ~/.ssh/id_ed25519

скопируйте открытый ключ SSH в буфер обмена

cat ~/.ssh/id_ed25519.pub

В правом верхнем углу любой страницы GitHub щелкните фотографию своего профиля, затем щелкните  Настройки
В разделе «Доступ» боковой панели нажмите SSH и ключи GPG
Нажмите Новый ключ SSH или Добавить ключ SSH

----------------------------------------------------------------
clickhouse миграции:

php yii migrate-clickhouse/up

----------------------------------------------------------------
install nodeJs:

cd ~

sudo apt install curl

curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash

source ~/.bashrc

nvm list-remote

nvm install [version.number]

nvm list

----------------------------------------------------------------
Сбросить все процессы юзера:

killall -u $USER

Завершение всех процессов кроме системных:

sudo pkill -TERM -u $USER

----------------------------------------------------------------
номера телефоны кейсы:

+7-911-264-78-38
+7-9112647838
+79112647838
8-911-264-78-38
8-9112647838
89112647838
911-264-78-38
911-2647838
9112647838