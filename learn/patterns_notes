Создающие:

Статическая фабрика:
статический метод, содержащий в себе switch case для создания связанных или не очень обьектов.

Простая фабрика:
Не является статической
для каждого создаваемого класса свой метод
(на мой взгляд самый нежизнеспособный шаблон из всех фабрик)

Фабричный метод:
интерфейс для создающего метода, и классы реализующие этот интерфейс
Этот паттерн является «настоящим» Шаблоном Проектирования, 
потому что он следует «Принципу инверсии зависимостей» также известному как «D» в S.O.L.I.D.

Абстрактная фабрика:
создаются серии связанных или зависимых обьектов
Может возвращать массив созданных обьектов

Пример с оплатой:
Фабрика создает обьекты оплаты по методам (карта, сбп или др)
Каждый обьект оплаты, содержит в себе метод оплаты, который в зависимости
от банка создает соответствующий банку обьект для оплаты, который реализует интерфейс оплаты

Строитель: это интерфейс для производства частей сложного объекта.
Иногда, если Строитель лучше знает о том, что он строит, этот интерфейс может быть абстрактным классом с методами по-умолчанию (адаптер).

Прототип обьекта:
Помогает избежать затрат на создание объектов стандартным способом (new Foo()), а вместо этого создаёт прототип и затем клонирует его.

Одиночка:
Позволяет содержать только один экземпляр объекта в приложении, которое будет обрабатывать все обращения, запрещая создавать новый экземпляр.

Обьектный пул:
Порождающий паттерн, который предоставляет набор заранее инициализированных объектов, готовых к использованию («пул»), 
что не требует каждый раз создавать и уничтожать их.

----------------------------------------------------------
Структурные:





