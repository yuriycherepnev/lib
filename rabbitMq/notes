Контейнер внедрения зависимостей — это объект, который знает, 
как создать и настроить экземпляр класса и зависимых от него объектов.

Yii обеспечивает функционал контейнера внедрения зависимостей через класс yii\di\Container. 
Он поддерживает следующие виды внедрения зависимостей:
Внедрение зависимости через конструктор;
Внедрение зависимости через метод;
Внедрение зависимости через сеттер и свойство;
Внедрение зависимости через PHP callback;

-------------------------------------------------------------------

Библиотека mikemadisonweb/yii2-rabbitmq связывает очереди и слушателей
либо напрямую через указание класса либо через контейнер внедрения зависимостей (если consumer указан строкой)

В разделе 'consumers' параметр 'callback' может быть именем класса или 
именем сервиса из контейнера внедрения зависимости.
           
    'consumers' => [
        [
            'name' => 'consumer-name',
            'callbacks' => [
                'queue-name' => \path\to\Consumer::class,
            ],
        ],
    ],
    'consumers' => [
        [
            'name' => 'consumer-name',
            'callbacks' => [
                'queue-name' => 'consumer-service-name',
            ],
        ],
    ],

'name' => 'consumer-name' нужен для обращения в консюмеру через команду:

php yii rabbitmq/consume consumer-name

Если слушатель реализован через контенейнер внедрения зависимостей, то нам нужно в web.php или в main.php
добавить сервис слушателя:

'container' => require(__DIR__ . '/services.php'),

services.php :

<?php

use app\modules\rabbit\CommonConsumer;
use app\modules\rabbit\OrderCallBackConsumer;

return [
    'definitions' => [],
    'singletons' => [
        'consumer-service-name' =>  [
            'class' => Consumer::class,
            'exchangeCallback' => 'b2b_order_web_callback'
        ],
    ],
];

здесь exchangeCallback - это кастомное свойство, которое мы самостоятельно определяем 
для класса-обработчика RabbitMQ.

При создании объекта Consumer через DI-контейнер, ему будет установлено свойство exchangeCallback со значением 'b2b_order_web_callback'.

-------------------------------------------------------------------

В Yii2 DI-контейнере definitions и singletons — это два способа регистрации зависимостей,
которые отличаются жизненным циклом создаваемых объектов.

* definitions (обычные определения) - создает новый экземпляр при каждом запросе
Каждый вызов Yii::$container->get() возвращает новый объект.

* singletons (одиночки) - всегда возвращает один и тот же экземпляр
При первом вызове объект создается, при последующих — возвращается существующий.

-------------------------------------------------------------------
когда мы вводим команду 

yii rabbitmq/consume YOUR_CONSUMER_NAME

библиотека идет в конфиг рэббита и по ключу consumers
ищет слушателя по соответствующему имени YOUR_CONSUMER_NAME