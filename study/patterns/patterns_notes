Для редактора:

Цвета:
цвет фона: 232425
цвет текста: f2f3f4

Шрифт:
текст: Roboto
код: Courier New

----------------------------------------------------------
Создающие:

Статическая фабрика:
статический метод, содержащий в себе switch case для создания связанных или не очень обьектов.

Простая фабрика:
Не является статической
для каждого создаваемого класса свой метод
(на мой взгляд самый нежизнеспособный шаблон из всех фабрик)

Фабричный метод:
интерфейс для создающего метода, и классы реализующие этот интерфейс
Этот паттерн является «настоящим» Шаблоном Проектирования, 
потому что он следует «Принципу инверсии зависимостей» также известному как «D» в S.O.L.I.D.

Абстрактная фабрика:
создаются серии связанных или зависимых обьектов
Может возвращать массив созданных обьектов

Пример с оплатой:
Фабрика создает обьекты оплаты по типам (карта, сбп или др)
Каждый обьект оплаты, содержит в себе метод оплаты, который в зависимости
от банка создает соответствующий банку обьект для оплаты, который реализует интерфейс оплаты

Строитель: это интерфейс для производства частей сложного объекта.
Иногда, если Строитель лучше знает о том, что он строит, этот интерфейс может быть абстрактным классом с методами по-умолчанию (адаптер).

Прототип обьекта:
Помогает избежать затрат на создание объектов стандартным способом (new Foo()), а вместо этого создаёт прототип и затем клонирует его.

Одиночка:
Позволяет содержать только один экземпляр объекта в приложении, которое будет обрабатывать все обращения, запрещая создавать новый экземпляр.

Обьектный пул:
Порождающий паттерн, который предоставляет набор заранее инициализированных объектов, готовых к использованию («пул»), 
что не требует каждый раз создавать и уничтожать их.

----------------------------------------------------------

На данном этапе для проработки паттерна мне хватит хорошего определения, пизженный схем и хорошо написанных кусков кода.

----------------------------------------------------------

Абстрактная фабрика (Abstract Factory)
Строитель (Builder)
Фабричный Метод (Factory Method)
Объектный пул (Pool)
Прототип (Prototype)
Простая Фабрика (Simple Factory)
Одиночка (Singleton)
Статическая Фабрика (Static Factory)


Внедрение Зависимости (Dependency Injection)
Фасад (Facade)
Текучий Интерфейс (Fluent Interface)
Приспособленец (Flyweight)
Прокси (Proxy)
Реестр (Registry)

Цепочка Обязанностей (Chain Of Responsibilities)
Команда (Command)
Интепретатор (Interpreter)
Итератор (Iterator)
Посредник (Mediator)
Хранитель (Memento)
Объект Null (Null Object)
Наблюдатель (Observer)
Спецификация (Specification)
Состояние (State)
Стратегия (Strategy)
Шаблонный Метод (Template Method)
Посетитель (Visitor)

----------------------------------------------------------

Адаптер (Adapter / Wrapper) +
Мост (Bridge) +
Декоратор (Decorator) +
Компоновщик (Composite) +
Преобразователь Данных (Data Mapper) +