Сложность алгоритма - сколько действий необходимо совершить для его выполнения. 

Big O (или О нотация) показывает то, как сложность алгоритма растёт с увеличением входных данных. 

Сложности алгоритмов:

Константная 0(1) - вычислительная сложность алгоритма не зависит от входных данных. 
 * Доступ к элементу массива
 * Сложение двух чисел
 * Размер массива

Линейная 0(n) - сложность алгоритма линейно растёт с увеличением входных данных. 
 * Рекурсивная функция
 * цикл for
 * 2 и более не вложенных цикла for

Логарифмическая О(log n) - сложность алгоритма растёт логарифмически с увеличением входных данных.
Другими словами это такой алгоритм, где на каждой итерации берётся половина элементов.
 * бинарный поиск

Квадратичная O(n2), O(n^2) - удвоение размера входных данных увеличивает время выполнения в 4 раза.
 * Вложенные циклы for
 * Вложенные рекурсии

Линеарифметическая O(n * log n) - удвоение размера входных данных увеличит время выполнения чуть более, чем вдвое.
 * Сортировка слиянием или множеством n элементов.







